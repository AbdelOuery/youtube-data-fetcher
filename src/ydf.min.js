var _this=this;(a=>{'use strict';const b=n=>{return o=>{const p=new XMLHttpRequest,q=Object.assign({},n,o);let r=q.params;return r&&'object'==typeof r&&(r=Object.keys(r).map(s=>encodeURIComponent(s)+'='+encodeURIComponent(r[s])).join('&')),new Promise((s,t)=>{p.open(n.method,n.url+'?'+r),p.send(),p.onload=()=>{p.readyState===p.DONE&&(200<=_this.status||300>_this.status?s(JSON.parse(p.response)):t({status:_this.status,statusText:p.statusText}))},p.onerror=()=>t({status:_this.status,statusText:p.statusText})})}},c=b({method:'GET',url:'https://www.googleapis.com/youtube/v3/channels'}),d=b({method:'GET',url:'https://www.googleapis.com/youtube/v3/playlists'}),e=b({method:'GET',url:'https://www.googleapis.com/youtube/v3/playlistItems'}),f=(n,o,p)=>{return n.items.reduce((q,r)=>{let s;switch(p){case'videos':s=new k('video',{id:r.snippet.resourceId.videoId,title:r.snippet.title,description:r.snippet.description,playlistId:r.snippet.playlistId,positionInPlaylist:r.snippet.position,creationDate:r.snippet.publishedAt.substring(0,10),thumbnails:r.snippet.thumbnails,privacyStatus:r.status.privacyStatus});break;case'playlists':s=new k('playlist',{id:r.id,title:r.snippet.title,description:r.snippet.localized.description,creationDate:r.snippet.publishedAt.substring(0,10),videoCount:r.contentDetails.itemCount,thumbnails:r.snippet.thumbnails,privacyStatus:r.status.privacyStatus});break;default:}return o&&'string'==typeof o?s.attributes.privacyStatus===o&&q.push(s):q.push(s),q},[])},g=(n,o,p)=>{const q={part:'contentDetails, snippet, status',channelId:l.id,key:l.key};return'undefined'!=typeof n&&Object.assign(q,{maxResults:n}),'undefined'!=typeof p&&Object.assign(q,{pageToken:p}),d({params:q}).then(r=>{return new j(r.kind,r.pageInfo.resultsPerPage,r.pageInfo.totalResults,r.prevPageToken,r.nextPageToken,f(r,o,'playlists'),o)})},h=(n,o,p,q)=>{return c({params:{part:'contentDetails',id:l.id,key:l.key}}).then(()=>{const s={part:'snippet, status',playlistId:n,key:l.key};return'undefined'!=typeof o&&Object.assign(s,{maxResults:o}),'undefined'!=typeof q&&Object.assign(s,{pageToken:q}),e({params:s}).then(t=>{return new j(t.kind,t.pageInfo.resultsPerPage,t.pageInfo.totalResults,t.prevPageToken,t.nextPageToken,f(t,p,'videos'),p)})})},i=(n,o)=>{return Object.assign(n,o),Object.freeze(n),n},j=class{constructor(n,o,p,q,r,s,t){i(this,{kind:n,resultsPerPage:o,totalResults:p,prevPageToken:q,nextPageToken:r,data:s,privacyStatus:t})}fetchNextPage(){if(this.nextPageToken){const n=this.kind.substring(8);switch(n){case'playlistListResponse':return g(this.resultsPerPage,this.privacyStatus,this.nextPageToken);case'playlistItemListResponse':return h(this.data[0].attributes.playlistId,this.resultsPerPage,this.privacyStatus,this.nextPageToken);default:}}else throw new Error('Cannot fetch the next results page, no such page!')}fetchPreviousPage(){if(this.prevPageToken){const n=this.kind.substring(8);switch(n){case'playlistListResponse':return g(this.resultsPerPage,this.privacyStatus,this.prevPageToken);case'playlistItemListResponse':return h(this.data[0].attributes.playlistId,this.resultsPerPage,this.privacyStatus,this.prevPageToken);default:}}else throw new Error('Cannot fetch the previous results page, no such page!')}},k=class{constructor(n,o){i(this,{type:n,attributes:o})}},l={};'undefined'==typeof a||a.ydf||(a.ydf=class{constructor(n,o){i(l,{key:n,id:o})}channelInfo(){return c({params:{part:'snippet, statistics',id:l.id,key:l.key}}).then(n=>{return{localization:n.items[0].snippet.country,customUrl:n.items[0].snippet.customUrl,title:n.items[0].snippet.title,description:n.items[0].snippet.description,creationDate:n.items[0].snippet.publishedAt.substring(0,10),subscriberCount:n.items[0].statistics.subscriberCount,videoCount:n.items[0].statistics.videoCount,viewCount:n.items[0].statistics.viewCount}})}playlists(n,o){return g(n,o)}playlist(n){return this.playlists(50).then(o=>{const p=o.data.find(q=>q.attributes.title===n);if(p)return p;throw new Error(`Cannot fetch videos from "${n}", no such playlist!`)})}uploads(n,o){return c({params:{part:'contentDetails',id:l.id,key:l.key}}).then(p=>h(p.items[0].contentDetails.relatedPlaylists.uploads,n,o))}playlistUploads(n,o,p){return this.playlists(50).then(q=>{const r=q.data.find(s=>s.attributes.title===n);if(r)return h(r.attributes.id,o,p);throw new Error(`Cannot fetch videos from "${n}", no such playlist!`)})}})})(window);
